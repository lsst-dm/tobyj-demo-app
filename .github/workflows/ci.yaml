name: CI

env:
  # Current supported Python version. For applications, there is generally no
  # reason to support multiple Python versions, so all actions are run with
  # this version. Quote the version to avoid interpretation as a floating
  # point number.
  PYTHON_VERSION: "3.12"
  UV_PYTHON_PREFERENCE: "system"
  BUILDKIT_PROGRESS: "plain"

"on":
  merge_group: {}
  pull_request:
  push:
    branches-ignore:
      # These should always correspond to pull requests, so ignore them for
      # the push trigger and let them be triggered by the pull_request
      # trigger, avoiding running the workflow twice.  This is a minor
      # optimization so there's no need to ensure this is comprehensive.
      - "dependabot/**"
      - "gh-readonly-queue/**"
      - "renovate/**"
      - "tickets/**"
      - "u/**"
    tags:
      - "*"

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - name: Run tox
        uses: lsst-sqre/run-tox@v1
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          tox-envs: "py,coverage-report,typing"
          tox-requirements: requirements/tox.txt

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    timeout-minutes: 10

    # Only do Docker builds of tagged releases and pull requests from ticket
    # branches.  This will still trigger on pull requests from untrusted
    # repositories whose branch names match our tickets/* branch convention,
    # but in this case the build will fail with an error since the secret
    # won't be set.
    if: >
      github.event_name != 'merge_group'
      && (
       startsWith(github.ref, 'refs/tags/') ||
       startsWith(github.head_ref, 'u/tobyj/')
      )

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: lsst-sqre/build-and-push-to-ghcr@u/tobyj/docker_target
        id: build
        with:
          image: ${{ github.repository }}
          target: runtime-image
          github_token: ${{ secrets.GITHUB_TOKEN }}
          push: false

  # Release -- when PR is merged to main, bump version, make tag, recommit
  release:
    runs-on: ubuntu-latest
    needs: [lint, test]
    timeout-minutes: 10
    if: >-
      github.event.pull_request.closed_at != 0
      && github.event.pull_request.merged == true
    steps:
      - run: >-
          echo "${{ github.head_ref }} merged into ${{ github.ref }}
          by {{ github.event.pull_request.merged_by.name }} <{{ github.event.pull_request.merged_by.email }}>"
      - uses: actions/checkout@v4

      - name: Set up UV
        uses: astral-sh/setup-uv@v4
        with:
          version: "0.5"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install Release Manager
        run: >-
          uv tool install python-semantic-release

      - name: Configure Git
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"

      - name: Bump Project Version
        env:
          GIT_COMMIT_AUTHOR: "${{github.actor}} <${{github.actor}}@users.noreply.github.com>"
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >-
          semantic-release
          version --patch
          --no-vcs-release --skip-build --no-changelog
